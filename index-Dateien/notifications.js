define("notifications/notificationFrame/notificationFrame.rt",["react","lodash","symbols"],function(i,t,n){"use strict";return function(){return i.createElement("div",{className:"notification-frame"},i.createElement("div",{className:"close-notification",onClick:this.onCloseClicked},i.createElement("a",{},i.createElement(n.symbol,{name:"bubble-close"}))),i.createElement("div",{className:"notification-gutter "+this.getGutterClass()}),"\n    ",this.props.children,"\n")}}),define("notifications/notificationFrame/notificationFrame",["create-react-class","prop-types","lodash","constants","notifications/notificationFrame/notificationFrame.rt"],function(i,t,n,e,o){"use strict";return i({displayName:"notificationFrame",propTypes:{type:t.oneOf(n.values(e.NOTIFICATIONS.TYPES)).isRequired,close:t.func.isRequired},onCloseClicked:function(){this.props.close()},getGutterClass:function(){return"gutter-"+this.props.type},render:o})}),define("notifications/notificationCenter/notificationCenter.rt",["react","lodash","core","uiAnimations","util"],function(i,t,n,e,o){"use strict";return function(){return this.props.notifications.length>0?i.createElement(o.outerClick,{onOuterClick:this.closeAll,key:"133"},i.createElement("div",{className:"notification-center"},i.createElement.apply(this,[e.listAddRemove,{},t.map(this.props.notifications,function(e,o){var c=this;return i.createElement(n.lazyComponent,t.assign({},{moduleName:e.name,key:e.id,close:function(){return c.props.closeNotificationById(e.id)}},this.getNotificationProps(e)))}.bind(this))]))):null}}),define("notifications/notificationCenter/notificationCenter",["lodash","create-react-class","prop-types","higherOrderComponents","stateManagement","notifications/notificationCenter/notificationCenter.rt"],function(i,t,n,e,o,c){"use strict";var s=t({displayName:"notificationCenter",propTypes:{notifications:n.array.isRequired,closeNotificationById:n.func.isRequired,closeAllNotifications:n.func.isRequired},getNotificationProps:function(t){return i.omit(t,["id","name"])},closeAll:function(){i.invokeMap(this.props.notifications,"onClose"),this.props.closeAllNotifications()},render:c}),a=o.editorPlugins.notifications.actions,r=a.closeNotification,f=a.closeAllNotifications;return e.connect(function(i){return{notifications:o.editorPlugins.notifications.selectors.selectNotifications(i)}},function(i){return{closeNotificationById:function(t){return i(r(t))},closeAllNotifications:function(){return i(f())}}})(s)}),define("notifications",["notifications/notificationFrame/notificationFrame","notifications/notificationCenter/notificationCenter"],function(i,t){"use strict";return{notificationFrame:i,notificationCenter:t}});
//# sourceMappingURL=notifications.min.js.map